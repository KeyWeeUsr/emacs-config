# act -j compile --use-new-action-cache --action-offline-mode

# todo(artifacts): /root/.emacs.d/elpa,elpaca; chown -R 1000:1000, tgz, sign
name: CI

on:
  push:
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

jobs:
  compile:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        emacs: [
          # '27.1', '27.2',
          # '28.1',
          # '28.2',
          # '29.1', '29.2',
          '29.3',
          # 'snapshot'
        ]

    steps:
      - name: Check out the source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore apt lists and cache
        id: cache-apt
        uses: actions/cache/restore@v4
        with:
          path: |
            apt-cache
            apt-lists
          key: >-
            os-${{ matrix.os }}
            apt-${{ hashFiles('.github/apt.txt') }}
          restore-keys: >-
            os-${{ matrix.os }}
            apt-

      - name: Restore apt lists to original location
        run: |-
          sudo_prefix=""
          test -z "$ACT" && sudo_prefix=sudo
          $sudo_prefix rm -rf /var/lib/apt/lists || true
          $sudo_prefix mv apt-lists /var/lib/apt/lists || echo No cache

      - name: apt update
        if: steps.cache-apt.outputs.cache-hit != 'true'
        run: |-
          sudo_prefix=""
          test -z "$ACT" && sudo_prefix=sudo
          rm /etc/apt/apt.conf.d/docker* || true
          time $sudo_prefix apt update
          $sudo_prefix cp -r /var/lib/apt/lists apt-lists
          $sudo_prefix chown -R $UID:$UID apt-lists

      - name: apt install
        run: |-
          flags=""
          sudo_prefix=""
          test "${{ steps.cache-apt.outputs.cache-hit }}" = 'true' \
              && flags="--no-download"
          test -z "$ACT" && sudo_prefix=sudo
          rm /etc/apt/apt.conf.d/docker* || true

          time $sudo_prefix rm -rf /var/cache/apt || true
          time $sudo_prefix mv apt-cache /var/cache/apt || echo No cache
          time $sudo_prefix apt-get \
              -o APT::Keep-Downloaded-Packages=true \
              install \
              $flags \
              --no-install-recommends \
              --no-install-suggests -y $(grep -v '#' .github/apt.txt)
          $sudo_prefix cp -r /var/cache/apt apt-cache
          $sudo_prefix chown -R $UID:$UID apt-cache

      - name: Restore Emacs
        id: cache-emacs
        uses: actions/cache/restore@v4
        with:
          path: |
            nix
            etc-nix
            nix-profile
          key: >-
            os-${{ matrix.os }}
            emacs-${{ matrix.emacs }}

      - name: Restore Emacs to original location
        run: |-
          sudo_prefix=""
          test -z "$ACT" && sudo_prefix=sudo
          $sudo_prefix rm -rf \
              /nix \
              /etc/nix \
              /root/.nix-profile || true
          $sudo_prefix mv nix /nix || echo No cache
          $sudo_prefix mv etc-nix /etc/nix || echo No cache
          $sudo_prefix mv nix-profile /root/.nix-profile || echo No cache

      - name: Set up Emacs
        if: steps.cache-emacs.outputs.cache-hit != 'true'
        uses: jcs090218/setup-emacs@master
        with:
          version: ${{ matrix.emacs }}

      - name: Update PATH for Emacs and prepare for caching
        run: |
          sudo_prefix=""
          test -z "$ACT" && sudo_prefix=sudo

          echo "/root/.local/bin" >> "$GITHUB_PATH"
          echo "/root/.nix-profile/bin" >> "$GITHUB_PATH"

          $sudo_prefix cp -r /nix nix
          $sudo_prefix cp -r /etc/nix etc-nix
          $sudo_prefix cp -r /root/.nix-profile nix-profile
          $sudo_prefix chown -R $UID:$UID nix etc-nix nix-profile

      - name: Cache apt packages
        uses: actions/cache/save@v4
        with:
          path: |
            apt-cache
            apt-lists
          key: >-
            os-${{ matrix.os }}
            apt-${{ hashFiles('.github/apt.txt') }}
          restore-keys: >-
            os-${{ matrix.os }}
            apt-

      - name: Cache Emacs
        uses: actions/cache/save@v4
        with:
          path: |
            nix
            etc-nix
            nix-profile
          key: >-
            os-${{ matrix.os }}
            emacs-${{ matrix.emacs }}
