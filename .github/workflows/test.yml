# act -j compile --use-new-action-cache --action-offline-mode

# todo(artifacts): /root/.emacs.d/elpa,elpaca; chown -R 1000:1000, tgz, sign
name: CI

on:
  push:
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

jobs:
  compile:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        emacs: [
          # '27.1', '27.2',
          # '28.1',
          # '28.2',
          # '29.1', '29.2',
          '29.3',
          # 'snapshot'
        ]

    container:
      image: silex/emacs:${{ matrix.emacs }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out the source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure clean byte-compilation
        run: |
          set -e
          emacs --batch --quick \
              --directory . \
              --load <(echo "(setq byte-compile-error-on-warn t)") \
              --eval '(unless (byte-compile-file ".emacs") (kill-emacs 1))'

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        emacs: [
          # '27.1', '27.2',
          # '28.1',
          # '28.2',
          # '29.1', '29.2',
          '29.3',
          # 'snapshot'
        ]
        ecukes:
          - 0.6.18

    container:
      image: silex/emacs:${{ matrix.emacs }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out the source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # todo(offline): cache or pre-build
      - name: Ensure clean byte-compilation
        run: |
          apt update
          apt install -y nodejs git \
              --no-install-recommends \
              --no-install-suggests

      - name: Cache Ecukes
        id: cache-ecukes
        uses: actions/cache@v4
        with:
          path: |
            /root/.emacs.d/elpa/ecukes-0.6.18
            /root/.emacs.d/elpa/f-0.21.0
            /root/.emacs.d/elpa/s-1.13.0
            /root/.emacs.d/elpa/dash-2.20.0
            /root/.emacs.d/elpa/ansi-0.4.1
            /root/.emacs.d/elpa/espuds-0.3.3
            /root/.emacs.d/elpa/commander-0.7.0
          key: >-
            os-${{ matrix.os }}
            emacs-${{ matrix.emacs }}
            ecukes-${{ matrix.ecukes }}

      - name: Install Ecukes
        if: steps.cache-ecukes.outputs.cache-hit != 'true'
        run: |-
          set -e
          time emacs --batch \
              --directory . \
              --eval "$(cat<<EOF
              (progn
                (require 'package)
                (add-to-list
                 'package-archives
                 '("stable-melpa" . "https://stable.melpa.org/packages/") t)
                (package-initialize)
                (package-refresh-contents)
                (package-list-packages)
                (package-install 'ecukes)
              )
          EOF
          )"

      - name: Ensure Ecukes
        run: |-
          time emacs --batch \
              --directory . \
              --eval "$(cat<<EOF
              (progn
                (package-initialize)
                (require 'ecukes)
                (ecukes-load))
          EOF
          )"
          ls -lah /root/.emacs.d/elpa*

      # note: the initial boot relies on too many moving parts
      #       therefore, many retries for failed packages and cache
      #       and test the behavior afterwards (encourages me to lock too)
      - name: Cache Elpaca bootstrap
        id: cache-elpaca
        uses: actions/cache@v4
        with:
          path: |
            /root/.emacs.d
          key: >-
            os-${{ matrix.os }}
            emacs-${{ matrix.emacs }}
            elpaca-${{ hashFiles('.emacs.elpaca.lock') }}
          # nitpick: might or might not be a good idea here; let's see
          restore-keys: >-
            os-${{ matrix.os }}
            emacs-${{ matrix.emacs }}
            elpaca-

      - name: Run installation behavior test
        if: steps.cache-elpaca.outputs.cache-hit != 'true'
        run: |-
          emacs --batch \
              --directory . \
              --eval "$(cat<<EOF
              (progn
                (require 'package)
                (package-initialize)
                (require 'f)
                (require 'ecukes)
                (add-hook 'ecukes-reporter-steps-without-definition-hook
                          (lambda (steps)
                            (ignore steps)
                            (error "Missing implementations: %S" steps)))

                (add-hook 'ecukes-reporter-scenario-failed-hook
                          (lambda (scenario)
                            (message "scenario failed: %S" scenario)))
                (ecukes-load)
                (ecukes-reporter-use ecukes-cli-reporter)

                (message "Running install.feature")
                (ecukes-run (f-glob "install.feature"
                                    (ecukes-project-features-path)))
                (when (> (+ ecukes-stats-steps-failed
                            ecukes-stats-scenarios-failed)
                         0)
                  (error "Install test failed"))
              )
          EOF
          )" || (ls -lah /root/.emacs.d/elpaca/repos*;exit 1)
          ls -lah /root/.emacs.d/elpaca/repos
